kind: "Template"
apiVersion: v1
items:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
    labels:
      app: quotesapi
      app.kubernetes.io/component: quotesapi
      app.kubernetes.io/instance: quotesapi
    name: quotesapi
  spec:
    lookupPolicy:
      local: false
      tag: latest
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: "2021-02-19T04:33:31Z"
    creationTimestamp: "2021-02-19T04:33:31Z"
    generation: 2
    name: quotesdb
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: image-registry.openshift-image-registry.svc:5000/openshift/mysql:5.7
      generation: 2
      importPolicy: {}
      name: "5.7"
      referencePolicy:
        type: Source
items:
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    annotations:
    labels:
      app: quotesapi
      app.kubernetes.io/component: quotesapi
      app.kubernetes.io/instance: quotesapi
    name: quotesapi
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: quotesapi:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: quotes
      git:
        uri: ${APP_GIT_URL} 
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: php:7.2
          namespace: openshift
      type: Source
    successfulBuildsHistoryLimit: 5
    triggers:
    - github:
        secret: ${SECRET}
      type: GitHub
    - generic:
        secret: ${SECRET}
      type: Generic
    - type: ConfigChange
    - imageChange:
      type: ImageChange
apiVersion: v1
items:
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
    labels:
      app: quotesapi
      app.kubernetes.io/component: quotesapi
      app.kubernetes.io/instance: quotesapi
    name: quotesapi
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      deploymentconfig: quotesapi
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          deploymentconfig: quotesapi
      spec:
        containers:
        - env:
          - name: DATABASE_NAME
            value: quotesdb
          - name: DATABASE_PASSWORD
            value:  ${PASSWORD}
          - name: DATABASE_SERVICE_NAME
            value: quotesdb
          - name: DATABASE_USER
            value: quoteapp
          imagePullPolicy: Always
          name: quotesapi
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8443
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/mysql/data
            name: quotesdb-volume-1
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - quotesapi
        from:
          kind: ImageStreamTag
          name: quotesapi:latest
      type: ImageChange
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: quotesdb
      app.kubernetes.io/component: quotesdb
      app.kubernetes.io/instance: quotesdb
      app.kubernetes.io/name: mysql
    name: quotesdb
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      deploymentconfig: quotesdb
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          deploymentconfig: quotesdb
      spec:
        containers:
        - env:
          - name: MYSQL_DATABASE
            value: quotesdb
          - name: MYSQL_PASSWORD
            value: ${PASSWORD}
          - name: MYSQL_USER
            value: quoteapp
          image: image-registry.openshift-image-registry.svc:5000/openshift/mysql@sha256:9a781abe7581cc141e14a7e404ec34125b3e89c008b14f4e7b41e094fd3049fe
          imagePullPolicy: IfNotPresent
          name: quotesdb
          ports:
          - containerPort: 3306
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: quotesdb-volume-1
          persistentVolumeClaim:
            claimName: quotesdb-claim
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - quotesdb
        from:
          kind: ImageStreamTag
          name: mysql:5.7
      type: ImageChange
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2021-02-19T04:33:40Z"
      lastUpdateTime: "2021-02-19T04:33:40Z"
      message: Deployment config has minimum availability.
      status: "True"
      type: Available
    - lastTransitionTime: "2021-02-19T04:33:41Z"
      lastUpdateTime: "2021-02-19T04:33:41Z"
      message: replication controller "quotesdb-1" successfully rolled out
      reason: NewReplicationControllerAvailable
      status: "True"
      type: Progressing
    details:
      causes:
      - type: ConfigChange
      message: config change
    latestVersion: 1
    observedGeneration: 3
    readyReplicas: 1
    replicas: 1
    unavailableReplicas: 0
    updatedReplicas: 1
apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
    labels:
      app: quotesapi
      app.kubernetes.io/component: quotesapi
      app.kubernetes.io/instance: quotesapi
    name: quotesapi
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: 8443-tcp
      port: 8443
      protocol: TCP
      targetPort: 8443
    selector:
      deploymentconfig: quotesapi
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: quotesdb
      app.kubernetes.io/component: quotesdb
      app.kubernetes.io/instance: quotesdb
      app.kubernetes.io/name: mysql
    name: quotesdb
  spec:
    ports:
    - name: 3306-tcp
      port: 3306
      protocol: TCP
      targetPort: 3306
    selector:
      deploymentconfig: quotesdb
    sessionAffinity: None
    type: ClusterIP
apiVersion: v1
items:
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
    labels:
      app: quotesapi
      app.kubernetes.io/component: quotesapi
      app.kubernetes.io/instance: quotesapi
    name: quotesapi
  spec:
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: quotesapi
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: "2021-02-19T04:34:21Z"
        status: "True"
        type: Admitted
      routerCanonicalHostname: apps.na45.prod.nextcle.com
      routerName: default
      wildcardPolicy: None
apiVersion: v1
items:
- apiVersion: v1
  kind: PersistentVolumeClaim
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 300Mi
parameters:
- name: APP_GIT_URL
  displayName: Application Source Git URL
  description: The Git URL of the application source code
  required: true
- name: PASSWORD
  displayName: Database Password
  description: Password to access the database
  generate: expression
  from: '[a-zA-Z0-9]{16}'
- name: SECRET
  displayName: Webhook Secret  
  description: Secret for webhooks
  generate: expression
  from: '[a-zA-Z0-9]{40}'
